- 자바스크립트 엔진
    1. 자바스크립트 엔진은 자바스크립트 코드를 읽어 실행하는 프로그램
    2. 작성한 자바스크립트 코드는 자바스크립트 엔진을 통해 파싱되고 실행
    3. Chrome 브라우저의 경우 V8 엔진을 사용!
    4. node.js는 브라우저 외으 ㅣ환경에서 자바스크립트 코드를 실행하도록 하는 프로그램.
    5. node.js는 여러 프로그램으로 구성, 자바스크립트 코드를 읽는 프로그램으로 V8 사용
    6. 브라우저 환경과 node.js 환경은 같은 자바스크립트 코드를 작성해도 다르게 동작

- 자바스크립트 코드 실행
    1. 자바스크립트 엔진은 코드 실행 전 실행 컨텍스트를 생성함.
    2. 실행 컨텍스트는 두 단계를 통해 생성.
    3. 생성 단계의 자바스크립트 엔진 => 변수 선언을 읽음.
    4. 실행 단계의 자바스크립트 엔진 => 변수 값을 할당.

- 렉시컬 환경(Lexical Environment)
    1. 함수의 렉시컬 환경은, 함수가 사용하는 변수들을 둘러싼 환경을 의미한다.
    2. 특정 변수의 값은 함수의 렉시컬 환경 안에서 찾을 수 있음.
    3. 렉시컬 환경은 실행 컨텍스트 안에 정의된 Variable Object로 이해할 수 있다.

- 생성 단계에서의 코드 실행
    1. 자바스크립트 엔진은 생성 단계에서 함수 선언문, 함수 표현식, 변수 등을 읽어 실행 컨텍스트에 저장.
    2. 변수의 경우, 실행 컨텍스트의 렉시컬 환경을 구성
    3. 함수 선언문 외에 변수는 값이 저장되지 않음.
    4. 자바스크립트 엔진은 변수에 값을 할당한느 구문을 만나면 실행 컨텍스트에 값을 저장.
    5. 그 외 코드를 한 줄씩 읽어 나가며 실행.

- 자바스크립트의 내장 객체들
    1. 자바스크립트는 여러 용도에 활용하는 객체를 내장하고 있다.
    2. 숫자 다루기, 문자 다루기, 날짜 다루기, JSON 객체 다루기 등에 유용한 객체를 제공한다.
    3. 핵심 내장 객체들의 기능을 이해하면, 실제 프로젝트에서 유용하게 활용할 수 있다.

- globalThis
    1. globalThis는 전역 객체를 지칭하는 변수.
    2. 전역 객체는 환경에 따라 다름.
    3. 브라우저 환경은 window, node 환경은 global 객체를 지칭.
    4. globalThis는 환경별 차이를 통일하여 하나의 변수로 서로 다른 전역 객체를 가리키게 함.

    - window
        1. DOM document를 포함하는 창을 나타나는 객체.
        2. 전역 스코프에 선언된 변수는 모두 window의 property가 됨.
        3. 현재 창의 정보를 얻거나, 창을 조작한다.

    - document
        1. 브라우저에 로드된 웹페이지.
        2. 문서의 title, URL 등의 정보를 얻음.
        3. element 생성, 검색 등 기능 제공.
        4. createElement, createTextNode는 동적으로 원소를 생성.
        5. 이를 이용해 자바스크립트만으로 원소를 구성할 수 있음.

- Number, NaN
    1. 자바스크립트의 number 원시타입을 감싸는 객체.
    2. 유의미한 상수값, 숫자를 변환하는 메서드 등을 제공.
    3. NaN - Not a Number를 나타내는 객체.
    4. isNaN() - 전역 함수로, 입력값을 숫자로 변환했을 때 NaN이 되는지를 검사.

- String, JSON
    1. 자바스크립트의 문자열 원시 타입의 래퍼 객체.
    2. 문자열을 조작하기 위한 여러 메서드를 포함.
    3. JSON - JSON 객체와 관련된 메서드를 담은 객체.
